const express = require('express');
const mongoose = require('mongoose');
const app = express();

app.use(express.json());

const uri = "mongodb+srv://maurojuniorpf170:dVegIlPx9npPtxUn@tarefas.fhtcpa9.mongodb.net/?retryWrites=true&w=majority";
const dbName = 'Tarefas';

mongoose.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log('Conexão estabelecida com o banco de dados.'))
  .catch(err => console.error(err));

const TarefaSchema = new mongoose.Schema({
  nome: { type: String, required: true },
  assunto: { type: String, required: true },
  notas: { type: String, required: true },
  data: { type: String, required: true },
  horario: { type: String, required: true }
});

const ColecaoTarefas = mongoose.model('Tarefa', TarefaSchema);

app.get('/tarefas', async (req, res) => {
  const tarefas = await ColecaoTarefas.find().exec();
  res.json(tarefas);
});

app.post('/tarefas', async (req, res) => {
  const tarefa = new ColecaoTarefas({
    nome: req.body.nome,
    assunto: req.body.assunto,
    notas: req.body.notas,
    data: req.body.data,
    horario: req.body.horario
  });

  try {
    const result = await tarefa.save();
    res.status(201).json(result);
  } catch (err) {
    console.error(err);
    res.sendStatus(500);
  }
});

app.put('/tarefas/:id', async (req, res) => {
  const tarefaId = req.params.id;

  try {
    const tarefa = await ColecaoTarefas.findByIdAndUpdate(tarefaId, req.body, { new: true }).exec();
    res.json(tarefa);
  } catch (err) {
    console.error(err);
    res.sendStatus(500);
  }
});

app.delete('/tarefas/:id', async (req, res) => {
  const tarefaId = req.params.id;

  try {
    const result = await ColecaoTarefas.findByIdAndDelete(tarefaId).exec();
    if (!result) {
      return res.status(404).send('Tarefa não encontrada.');
    }
    res.sendStatus(204);
  } catch (err) {
    console.error(err);
    res.sendStatus(500);
  }
});

const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`Servidor Rodando. Porta: ${port}`));

